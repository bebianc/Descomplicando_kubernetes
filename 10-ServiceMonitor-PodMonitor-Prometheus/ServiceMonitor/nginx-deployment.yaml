apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-server
spec:
  selector: # Selector que o ServiceMonitor irá utilizar para encontrar os serviços que ele irá monitorar
    matchLabels:
      app: nginx-server # label que ServiceMonitor irá utilizar para encontrar os serviços que irá monitorar
  replicas: 3     
  template: # template que o Deployment irá utilizar para os Pods
    metadata:
      labels: # labels do template
        app: nginx-server 
      annotations: # annotations do template que irá adicionar aos Pods
        prometheus.io/scrape: 'true' # habilita o scraping do Prometheus
        prometheus.io/port: '9113' # porta do target
    spec:
      containers:
      - name: nginx
        image: nginx
        volumeMounts: # volumes que serão montados no container
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf # subpath do volume
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
          name: http
      - name: nginx-exporter # nome do container que será o exporter
        image: 'nginx/nginx-prometheus-exporter:0.11.0' # imagem do container exporter
        args: # argumentos do container
        - '-nginx.scrape-uri=http://localhost/metrics' # argumento para definir a URI de scraping
        resources:
          limits:
            memory: "128Mi"
            cpu: "0.3"
        ports:
        - containerPort: 9113 # porta do container exporter que será exposta
          name: metrics # nome da porta
      volumes: # definição dos volumes do container
      - configMap: # configmap do volume, nós iremos criar esse volume através de um configmap
          defaultMode: 420 # modo de permissão padrão que o volume será criado
          name: nginx-config #nome do configmap
        name: nginx-config # nome do volume  
         